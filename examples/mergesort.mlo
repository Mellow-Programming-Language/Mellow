
import std.io;
import std.conv;

func formatArray(vals: []int): string {
    str := "[";
    if (vals.length > 0) {
        str = str ~ intToString(vals[0]);
    }
    if (vals.length > 1) {
        foreach (x; vals[1..]) {
            str = str ~ ", " ~ intToString(x);
        }
    }
    return str ~ "]";
}

func mergesort(vals: []int): []int {
    if (vals.length <= 1) {
        return vals;
    }
    left := mergesort(vals[..$/2]);
    right := mergesort(vals[$/2..]);
    if (left[$-1] <= right[0]) {
        return left ~ right;
    }
    return merge(left, right);
}

func merge(left: []int, right: []int): []int {
    result: [left.length + right.length]int;
    while (resIndex := 0; left.length > 0 || right.length > 0) {
        if (right.length == 0 || left[0] <= right[0]) {
            result[resIndex] = left[0];
            left = left[1..];
        }
        else {
            result[resIndex] = right[0];
            right = right[1..];
        }
        resIndex = resIndex + 1;
    }
    return result;
}

func main() {
    arr := [1, 9, 2, 8, 3, 7, 4, 6, 5];
    writeln(formatArray(mergesort(arr)));
}
